name: verify
on:
  push:
    branches:
      - master
    paths:
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/**'
      - '.verify-helper/**'
      - 'include/**'
      - 'doc_md/**'
      - 'test/**'
  pull_request:
    branches:
      - master
    paths:
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/**'
      - '.verify-helper/**'
      - 'include/**'
      - 'doc_md/**'
      - 'test/**'
  workflow_dispatch:
    inputs:
      ignore_prev_result:
        type: boolean
        default: false

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.head_ref || 'x' }}-${{ github.workflow }}-${{ github.ref }}-verify
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v2
        with:
          cache-pip: true

      - name: oj-resolve
        uses: competitive-verifier/actions/oj-resolve@v2
        with:
          output-path: verify_files.json
          include: |
                include/
                doc_md/
                test/
          exclude: |
                libs/
                .github/
                tinplate/
          config: .verify-helper/config.toml
      - name: parse-doxygen
        uses: competitive-verifier/actions/parse-doxygen@v2
        with:
          verify-files: verify_files.json

      - name: Upload verify_files.json
        uses: competitive-verifier/actions/upload-verify-artifact@v2
        with:
          file: verify_files.json
          artifact-name: ${{ runner.os }}-verify-files-json

      - name: Check bundled
        id: test-bundled
        run: |
          echo "count=$(find .competitive-verifier/bundled/ -type f | wc -l)" >> $GITHUB_OUTPUT
      - name: Upload bundled
        uses: actions/upload-artifact@v4
        if: steps.test-bundled.outputs.count > 0
        with:
          name: Bundled-${{ runner.os }}
          path: .competitive-verifier/bundled
          retention-days: 1

  verify:
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      SPLIT_SIZE: 16
    strategy:
      max-parallel: 16
      matrix:
        # prettier-ignore
        index:
          ["00", "01", "02", "03", "04", "05", "06", "07",
           "08", "09", "10", "11", "12", "13", "14", "15"]
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2147483647

      - name: Restore cached results
        if: ${{ !inputs.ignore_prev_result }}
        uses: actions/cache/restore@v4
        id: restore-cached-results
        with:
          path: ${{github.workspace}}/merged-result.json
          key: ${{ runner.os }}-verify-result-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-verify-result-

      - name: Download verify_files.json
        uses: competitive-verifier/actions/download-verify-artifact@v2
        with:
          artifact-name: ${{ runner.os }}-verify-files-json

      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v2
        with:
          cache-pip: true

      - name: Get storage information
        run: |
          echo "::group::free"
          free
          echo "::endgroup::"
          echo "::group::swapon"
          swapon
          echo "::endgroup::"
          echo "::group::df"
          df -ha --o --total
          echo "::endgroup::"
          echo "::group::du"
          du -ha | sort -hr
          echo "::endgroup::"

      - name: Clean up
        run: |
          rm -rf fonts
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force

      - name: Get storage information after cleaning up
        run: |
          echo "::group::free"
          free
          echo "::endgroup::"
          echo "::group::swapon"
          swapon
          echo "::endgroup::"
          echo "::group::df"
          df -ha --o --total
          echo "::endgroup::"
          echo "::group::du"
          du -ha | sort -hr
          echo "::endgroup::"

      - name: Verify
        uses: competitive-verifier/actions/verify@v2
        with:
          destination: ${{runner.temp}}/result.json
          split-size: ${{ env.SPLIT_SIZE }}
          split-index: ${{ matrix.index }}
          timeout: 1800
          prev-result: ${{ steps.restore-cached-results.outputs.cache-hit && 'merged-result.json' || ''}}
        env:
          YUKICODER_TOKEN: ${{secrets.YUKICODER_TOKEN}}

      - name: Get storage information after verify
        run: |
          echo "::group::free"
          free
          echo "::endgroup::"
          echo "::group::swapon"
          swapon
          echo "::endgroup::"
          echo "::group::df"
          df -ha --o --total
          echo "::endgroup::"
          echo "::group::du"
          du -ha | sort -hr
          echo "::endgroup::"

      - name: Upload result artifact
        uses: actions/upload-artifact@v4
        with:
          name: Result-${{ runner.os }}-${{ matrix.index }}
          path: ${{runner.temp}}/result.json
          retention-days: 1

  docs-and-check:
    runs-on: ubuntu-latest
    needs: [verify]
    outputs:
      upload-pages: ${{ steps.upload-pages.outcome == 'success' }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2147483647
  
      - name: Download verify_files.json and all artifacts
        id: all-artifacts
        uses: competitive-verifier/actions/download-verify-artifact@v2
        with:
          download-all: true
          artifact-root: .artifacts/
  
      - name: Extract bundled
        shell: bash
        run: |
          rm -rf .competitive-verifier/bundled
          if test -d "$SRCDIR"; then
            mkdir -p .competitive-verifier/
            mv "$SRCDIR" .competitive-verifier/bundled
          else
            echo "$SRCDIR does not exist."
          fi
        env:
          SRCDIR: .artifacts/Bundled-${{ runner.os }}
  
      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v2
        with:
          cache-pip: true

      - name: Merge results
        uses: competitive-verifier/actions/merge-result@v2
        with:
          result-files: ${{ steps.all-artifacts.outputs.artifacts-root }}/Result-*/result.json
          output-path: ${{github.workspace}}/merged-result.json
      - name: Docs
        uses: competitive-verifier/actions/docs@v2
        with:
          verify-result: ${{github.workspace}}/merged-result.json
          destination: _jekyll
          write-summary: true
      - name: Save result
        if: ${{ contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name) }}
        uses: actions/cache/save@v4
        with:
          path: ${{github.workspace}}/merged-result.json
          key: ${{ runner.os }}-verify-result-${{ github.sha }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: _jekyll
          destination: _site
      - name: Upload artifact
        id: upload-pages
        uses: actions/upload-pages-artifact@v4
        with:
          path: _site

      - name: Check
        uses: competitive-verifier/actions/check@v2
        with:
          verify-result: ${{ steps.all-artifacts.outputs.artifacts-root }}/Result-*/result.json

  deploy:
    if: ${{ contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name) && (success() || failure()) && github.ref == 'refs/heads/master' && needs.docs-and-check.outputs.upload-pages == 'true' }}
    needs: docs-and-check
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
